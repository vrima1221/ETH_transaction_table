{"version":3,"sources":["components/Footer/Footer.tsx","components/Header/Header.tsx","utils/dateFormat.ts","components/ErrorNotification/ErrorNotification.tsx","components/Table/Table.tsx","api/transactions.ts","components/Pagination/Pagination.tsx","styles/customSelectStyles.js","components/Filter/Filter.tsx","App.tsx","index.tsx"],"names":["Footer","React","memo","className","Header","dateFormat","d","date","Date","monthName","toLocaleString","month","day","getDate","year","getFullYear","slice","ErrorNotification","message","isError","hidden","Table","transactions","isLoading","errorMessage","map","transaction","blockNumber","href","hash","from","to","confirmations","sentAt","value","fee","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","getTransationsForPage","page","limit","filter","input","a","axios","get","params","Pagination","currentPage","totalPages","onPageChange","pageNumbers","i","Math","min","push","type","onClick","cn","disabled","number","customSelectStyle","control","provided","state","borderColor","isFocused","boxShadow","border","cursor","indicatorsContainer","paddingRight","clearIndicator","padding","dropdownIndicator","color","transform","indicatorSeparator","display","placeholder","Filter","searchInput","onFilterChange","onInputChange","onSubmit","onChange","e","target","options","label","v","styles","isSearchable","App","useState","currentTrans","setCurrentTrans","setIsLoading","setCurrentPage","setTotalPages","searchValue","setSearchValue","currentFilter","setCurrentFilter","setIsError","setErrorMessage","showErrorMessage","setTimeout","loadTransactions","pageNumber","then","response","data","transactionsResponse","totalPageCount","console","log","useEffect","error","event","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41dc8314.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss';\n\nexport const Footer: React.FC = React.memo(() => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <div className=\"footer__logo\">AppCo</div>\n\n        <div className=\"footer__rights\">All rights reserved by ThemeTags</div>\n\n        <div className=\"footer__copyright\">Copyrights Â© 2019. </div>\n      </div>\n    </footer>\n  );\n});\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = React.memo(() => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <div className=\"header__logo\">AppCo</div>\n      </div>\n    </header>\n  );\n});\n","export function dateFormat(d: Date) {\n  const date = new Date(d);\n  const monthName = date.toLocaleString('en-US', { month: 'long' });\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const formattedDate = `${monthName.slice(0, 3)}-${day}-${year}`;\n\n  return formattedDate;\n}\n","import React from 'react';\nimport './ErrorNotification.scss';\n\ntype Props = {\n  message: string;\n  isError: boolean;\n};\n\nexport const ErrorNotification: React.FC<Props> = (\n  {\n    message,\n    isError,\n  },\n) => {\n  return (\n    <div\n      className=\"error-notification\"\n      hidden={!isError}\n    >\n      {message}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Table.scss';\nimport { Dna } from 'react-loader-spinner';\nimport { Transaction } from '../../types/Transaction';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { ErrorNotification } from '../ErrorNotification/ErrorNotification';\n\ntype Props = {\n  transactions: Transaction[]\n  isLoading: boolean\n  isError: boolean\n  errorMessage: string\n};\n\nexport const Table: React.FC<Props> = ({\n  transactions,\n  isLoading,\n  isError,\n  errorMessage,\n}) => {\n  return (\n    <div className=\"container\">\n      <table className=\"table\">\n        <tr className=\"table__header\">\n          <th className=\"table__header-cell\">Block number</th>\n          <th className=\"table__header-cell\">Transaction ID</th>\n          <th className=\"table__header-cell\">Sender address</th>\n          <th className=\"table__header-cell\">{'Recipient\\'s address'}</th>\n          <th className=\"table__header-cell\">Block confirmations</th>\n          <th className=\"table__header-cell\">Date</th>\n          <th className=\"table__header-cell\">Value</th>\n          <th className=\"table__header-cell\">Transaction Fee</th>\n        </tr>\n\n        {!isLoading && (\n          transactions.map(transaction => (\n            <tr className=\"table__data-row\" key={transaction.hash}>\n              <td className=\"table__data-cell\">\n                {transaction.blockNumber}\n              </td>\n\n              <td className=\"table__data-cell\">\n                <a href={`https://etherscan.io/tx/${transaction.hash}`}>\n                  {transaction.hash}\n                </a>\n              </td>\n\n              <td className=\"table__data-cell\">\n                {transaction.from}\n              </td>\n\n              <td className=\"table__data-cell\">\n                {transaction.to}\n              </td>\n\n              <td className=\"table__data-cell\">\n                {transaction.confirmations}\n              </td>\n\n              <td className=\"table__data-cell\">\n                {dateFormat(transaction.sentAt)}\n              </td>\n\n              <td className=\"table__data-cell\">\n                {transaction.value}\n              </td>\n\n              <td className=\"table__data-cell\">\n                {transaction.fee}\n              </td>\n            </tr>\n          ))\n        )}\n      </table>\n      {(isLoading && !isError) && (\n        <div className=\"table__loader\">\n          <Dna\n            visible={isLoading}\n            height=\"150\"\n            width=\"150\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"dna-wrapper\"\n          />\n        </div>\n      )}\n      {isError && (\n        <div className=\"table__loader\">\n          <ErrorNotification isError={isError} message={errorMessage} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nexport const getTransationsForPage = async (\n  page: number,\n  limit: string,\n  filter: string,\n  input: string | number,\n) => {\n  const transactions = await axios.get('http://localhost:5000/transactions', {\n    params: {\n      page,\n      limit,\n      filter,\n      input,\n    },\n  });\n\n  return transactions;\n};\n","import React from 'react';\nimport './Pagination.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  currentPage: number\n  totalPages: number\n  onPageChange: (pageNumber: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({ currentPage, totalPages, onPageChange }) => {\n  const pageNumbers = [];\n\n  // for (let i = Math.max(currentPage - 2, 1); i <= Math.min(currentPage + 1,\n  // totalPages); i += 1) {\n  //   pageNumbers.push(i);\n  // }\n\n  for (let i = currentPage; i <= Math.min(currentPage + 4, totalPages); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const handlePreviousClick = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const handleNextClick = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <nav className=\"pagination\">\n      <button\n        type=\"button\"\n        onClick={handlePreviousClick}\n        className={cn('pagination__prev-button', { 'pagination__prev-button--active': currentPage > 1 })}\n        disabled={currentPage === 1}\n      >\n      </button>\n\n      <ul className=\"pagination__list\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"pagination__page-item\">\n            <button\n              type=\"button\"\n              onClick={() => onPageChange(number)}\n              className={cn('pagination__page-link', { 'pagination__page-link--active': currentPage === number })}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {currentPage < totalPages && (\n        <button\n          type=\"button\"\n          onClick={handleNextClick}\n          className=\"pagination__next-button\"\n        >\n        </button>\n      )}\n    </nav>\n  );\n};\n","export const customSelectStyle = {\n  control: (provided, state) => ({\n    ...provided,\n    borderColor: state.isFocused ? 'transparent' : 'transparent',\n    width: '100px',\n    boxShadow: state.isFocused ? 'none' : provided.boxShadow,\n    border: state.isFocused ? 'none' : provided.border,\n    '&:hover': {\n      boxShadow: state.isFocused ? 'none' : provided.boxShadow,\n      border: state.isFocused ? 'none' : provided.border,\n      cursor: 'pointer',\n    },\n  }),\n  indicatorsContainer: (provided) => ({\n    ...provided,\n    paddingRight: '0px',\n  }),\n  clearIndicator: (provided) => ({\n    ...provided,\n    padding: '0px',\n  }),\n  dropdownIndicator: (provided) => ({\n    ...provided,\n    padding: '0px',\n    color: '#3A80BA',\n    '&:hover': {\n      color: '#3A80BA',\n      transform: 'scale(1.1)',\n      cursor: 'pointer',\n    },\n  }),\n  indicatorSeparator: () => ({\n    display: 'none',\n  }),\n  placeholder: (provided) => ({\n    ...provided,\n    'font-weight': '400',\n    'font-size': '14px',\n    'line-height': '17px',\n    'font-family': 'Montserrat, sans-serif',\n    color: '#1A1A1A',\n  }),\n};\n","import React from 'react';\nimport './Filter.scss';\nimport Select, { SingleValue } from 'react-select';\nimport { customSelectStyle } from '../../styles/customSelectStyles';\n\nexport type SelectOptionType = {\n  value: string;\n  label: string;\n};\n\ntype Props = {\n  filter: SelectOptionType | null,\n  searchInput: string,\n  onFilterChange: (newValue: SingleValue<SelectOptionType>) => void,\n  onInputChange: (input: string) => void,\n  onSubmit: (event: React.FormEvent) => void\n};\n\nexport const Filter: React.FC<Props> = ({\n  filter,\n  searchInput,\n  onFilterChange,\n  onInputChange,\n  onSubmit,\n}) => {\n  const options = [\n    { value: 'from', label: 'Sender adress' },\n    { value: 'to', label: 'Recipient\\'s address' },\n    { value: 'hash', label: 'Transaction ID' },\n    { value: 'blockNumberString', label: 'Block number' },\n  ];\n\n  return (\n    <form\n      className=\"filter\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"filter__input-group\">\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={e => onInputChange(e.target.value)}\n          className=\"filter__input\"\n          placeholder=\"Search...\"\n        />\n\n        <Select\n          value={filter}\n          options={options}\n          onChange={(v) => onFilterChange(v)}\n          styles={customSelectStyle}\n          isSearchable={false}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"filter__button\"\n      >\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header/Header';\nimport { Table } from './components/Table/Table';\nimport { getTransationsForPage } from './api/transactions';\nimport { Transaction } from './types/Transaction';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { Filter, SelectOptionType } from './components/Filter/Filter';\n\nexport const App: React.FC = () => {\n  const [currentTrans, setCurrentTrans] = useState<Transaction[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchValue, setSearchValue] = useState('');\n  const [currentFilter, setCurrentFilter] = useState<SelectOptionType | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const showErrorMessage = (message: string) => {\n    setIsError(true);\n    setIsLoading(false);\n    setErrorMessage(message);\n\n    setTimeout(() => {\n      setIsError(false);\n    }, 3000);\n  };\n\n  const loadTransactions = async (pageNumber: number) => {\n    try {\n      setIsLoading(true);\n\n      const limitPerPage = '14';\n      const filter = currentFilter?.value || '';\n\n      const transactionsResponse = await getTransationsForPage(\n        pageNumber,\n        limitPerPage,\n        filter,\n        searchValue,\n      )\n        .then(response => response.data);\n\n      const { transactions, totalPageCount } = transactionsResponse;\n\n      // eslint-disable-next-line no-console\n      console.log(transactions);\n\n      setCurrentTrans(transactions);\n      setTotalPages(totalPageCount);\n      setIsLoading(false);\n    } catch (error) {\n      setCurrentTrans([]);\n      showErrorMessage('Failed to load transactions');\n    }\n  };\n\n  const handleSearchByFilterSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      loadTransactions(currentPage);\n    } catch (error) {\n      showErrorMessage('Failed to load by your filter');\n    }\n  };\n\n  useEffect(() => {\n    try {\n      loadTransactions(currentPage);\n    } catch (error) {\n      showErrorMessage('Failed to load');\n    }\n  }, [currentPage]);\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"wrapper\">\n        <Filter\n          filter={currentFilter}\n          searchInput={searchValue}\n          onInputChange={setSearchValue}\n          onFilterChange={setCurrentFilter}\n          onSubmit={handleSearchByFilterSubmit}\n        />\n\n        <Table\n          transactions={currentTrans}\n          isLoading={isLoading}\n          isError={isError}\n          errorMessage={errorMessage}\n        />\n\n      </div>\n      {!isLoading && (\n        <Pagination\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n          currentPage={currentPage}\n        />\n      )}\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}